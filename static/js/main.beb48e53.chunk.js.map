{"version":3,"sources":["assets/loader.gif","components/Login.js","components/Footer.js","components/Loader.js","components/Header.js","components/ListItem.js","App.js","assets/config.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","_ref","uiConfig","firebaseAuth","react_default","a","createElement","className","StyledFirebaseAuth_default","Footer","Loader","style","src","loader","alt","Header","onClick","ListItem","key","name","item","status","borderColor","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","signIn","setSignIn","_useState5","_useState6","user","setUser","_useState7","_useState8","display","setDisplay","useEffect","auth","onAuthStateChanged","readUserData","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","database","ref","on","snapshot","val","photoURL","signOut","undefined","map","id","occupant","arr","items","displayName","set","sendData","Boolean","window","location","hostname","match","console","disableYellowBox","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.beb48e53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.584b607f.gif\";","import React from 'react';\nimport '../design/App.css';\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\n\nexport default function Login({uiConfig,firebaseAuth}) {\n  return (\n    <div className=\"bg\">\n      <div className=\"d-flex flex-column justify-content-center  align-items-center my-5\">\n        <h2 className=\"text-white my-3 \">Quiped Application</h2>\n        <StyledFirebaseAuth\n          uiConfig={uiConfig}\n          firebaseAuth={firebaseAuth}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n      <footer className=\"position-fixed bg-info w-100 d-flex justify-content-between p-3\">\n        <p className=\"text-white small\">&copy; Copyright 2020, All rights reserved.</p>\n        <p className=\"text-white small\">Made with &hearts; by Sudhir</p>\n      </footer>\n  )\n}\n","import React from 'react'\nimport loader from \"../assets/loader.gif\";\n\nexport default function Loader(style) {\n  return (\n    <div className=\"loading d-flex justify-content-center align-items-center flex-column\" style={style}>\n      <img src={loader} alt=\"loader\" />\n      <p className=\"text-info\">Updating status ...</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Header({src,onClick}) {\n  return (\n    <div className=\"d-flex justify-content-between align-items-center w-100\">\n      <h5 className=\"text-info text-center my-3\">Occupancy Status</h5>\n      <div>\n        <img src={src} alt=\"profile\" className=\"pro\" />\n        <button onClick={onClick}>\n          <p className=\"logout\">Sign Out</p>\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport '../design/App.css';\nexport default function ListItem({key,name,item,onClick,status}) {\n  return (\n    <div className=\"d-flex  justify-content-between align-items-center list\" key={key}>\n      <p className=\"text-info\">{name}</p>\n      <div className=\"d-flex  justify-content-between align-items-center \">\n        {item ?\n          <p className=\"tab text-warning px-3\">{item}</p> : <p className=\"tab text-info px-3\">Vacant</p>\n        }\n        <div style={{ borderColor: status ? '#82E871' : '#e3e3e3' }}\n          className=\"box\" onClick={onClick}>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","/* eslint-disable react-native/no-inline-styles */\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport './design/App.css';\nimport { config, message } from './assets/config';\nimport Login from './components/Login';\nimport Footer from './components/Footer';\nimport Loader from './components/Loader';\nimport Header from './components/Header';\nimport ListItem from './components/ListItem';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [signIn, setSignIn] = useState(false);\n  const [user, setUser] = useState('');\n  const [display,setDisplay]= useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      setSignIn(!!user)\n      setUser(user)\n    })\n    readUserData();\n  }, []);\n\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  }\n\n  const sendData = id => {\n    setDisplay(true);\n    const arr = data.map(items => {\n      if (items.id === id) {\n        items.status = !items.status;\n      }\n      if (items.status) {\n        items.occupant = user.displayName\n      } else {\n        items.occupant = ''\n      }\n      return items;\n    });\n    setData(arr);\n    firebase\n      .database()\n      .ref('Rooms/')\n      .set({\n        data,\n      })\n  };\n\n  const readUserData = () => {\n    setDisplay(true);\n    firebase\n      .database()\n      .ref('Rooms/')\n      .on('value', function (snapshot) {\n        setData(snapshot.val().data);\n        setDisplay(false);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      {signIn ? <div className=\"container position-relative vh-100\">\n        {display ?\n          <Loader style={{ display: display ? 'flex' : 'none'}} /> :\n          <div>\n            <Header src={user.photoURL} onClick={() => firebase.auth().signOut()}/>\n            {data !== undefined ?\n              data.map(item =>\n                <ListItem key={item.id} name={item.name} item={item.occupant} status={item.status}onClick={() => sendData(item.id)}/>\n               ) : <p>{message}</p>}\n          </div>\n          }\n        </div>\n        : <Login uiConfig={uiConfig}\n          firebaseAuth={firebase.auth()}/>\n        }\n        <Footer/>\n      </div>\n  );\n};\n\nexport default App;\n","export const  config = {\n  apiKey: \"AIzaSyBTDdfKRjLHO0zyKnuGuot5_ZBQXzpjL3U\",\n  authDomain: \"rnfirebase-9458f.firebaseapp.com\",\n  databaseURL: \"https://rnfirebase-9458f.firebaseio.com\",\n  projectId: \"rnfirebase-9458f\",\n  storageBucket: \"rnfirebase-9458f.appspot.com\",\n  messagingSenderId: \"77224361806\",\n  appId: \"1:77224361806:web:d339123a05dccd9e97e81f\"\n};\n\nexport const message = \"Please ask your administrator to add rooms.\"\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './design/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconsole.disableYellowBox = true;\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}