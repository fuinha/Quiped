{"version":3,"sources":["assets/loader.gif","components/Footer.js","components/auth.js","components/Landing.js","assets/config.js","components/Header.js","components/ListItem.js","components/Loader.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","AuthContext","React","createContext","AuthProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","signIn","setSignIn","_useState3","_useState4","user","setUser","useEffect","firebase","auth","onAuthStateChanged","Provider","value","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Landing","useContext","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","react_router","to","StyledFirebaseAuth_default","firebaseAuth","Header","src","onClick","stats","style","alt","ListItem","key","name","item","enabled","occupied","status","borderColor","display","indexOf","Loader","loader","Dashboard","data","setData","occupiedUser","setOccupiedUser","_useContext","_useState5","_useState6","loading","setLoading","readUserData","sendUserData","database","ref","set","on","snapshot","val","occupyUser","Array","from","values","map","User","freeRoom","filter","occupant","concat","colorCode","color","photoURL","signOut","undefined","id","displayName","arr","flag","some","items","property","child","remove","occupy","RoomId","push","sendData","App","auth_AuthProvider","react_router_dom","basename","process","exact","path","component","Boolean","window","location","hostname","match","console","disableYellowBox","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9de1c86e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.584b607f.gif\";","import React from 'react'\n\nexport default function Footer() {\n  return (\n      <footer className=\"position-fixed bg-info w-100 d-flex justify-content-between p-3\">\n        <p className=\"text-white small\">&copy; Copyright 2020, All rights reserved.</p>\n        <p className=\"text-white small\">Made with &hearts; by Sudhir</p>\n      </footer>\n  )\n}\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [signIn, setSignIn] = useState(false);\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setSignIn(!!user);\n      setUser(user);\n    });\n  }, []);\n  \n  \n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        signIn\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","/* eslint-disable react-native/no-inline-styles */\nimport React, {useContext } from \"react\";\nimport {Redirect} from 'react-router-dom';\nimport firebase from \"firebase\";\nimport \"../design/App.css\";\nimport { config } from \"../assets/config\";\nimport Footer from \"./Footer\";\nimport { AuthContext } from \"./auth\"\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst Landing = () => {\n  const {signIn} = useContext(AuthContext)\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n    callbacks: {\n      signInSuccess: () => false,\n    },\n  };\n\n  if(signIn){\n    return <Redirect to={\"/dashboard\"} />\n  }\n\n  return (\n      <div className=\"bg\">\n        <div className=\"d-flex flex-column justify-content-center  align-items-center h-75\">\n          <h1 className=\"text-white font-weight-bold my-3 \">Quiped</h1>\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </div>\n        <Footer />\n     </div>\n  );\n};\n\nexport default Landing;\n","export const  config = {\n  apiKey: \"AIzaSyBTDdfKRjLHO0zyKnuGuot5_ZBQXzpjL3U\",\n  authDomain: \"rnfirebase-9458f.firebaseapp.com\",\n  databaseURL: \"https://rnfirebase-9458f.firebaseio.com\",\n  projectId: \"rnfirebase-9458f\",\n  storageBucket: \"rnfirebase-9458f.appspot.com\",\n  messagingSenderId: \"77224361806\",\n  appId: \"1:77224361806:web:5d7701ade13d4243\"\n};\n\nexport const message = \"Please ask your administrator to add rooms.\"\n","import React from 'react'\n\nexport default function Header({src,onClick,stats,style}) {\n  return (\n    <div className=\"pb-3\">\n      <div className=\"d-flex justify-content-between align-items-center w-90\">\n        <h6 className=\"my-3 font-weight-bold\" style={style}>Occupancy Status: {stats} available </h6>\n        <div>\n          <img src={src} alt=\"profile\" className=\"profile\" />\n          <button onClick={onClick}>\n            <p className=\"logout\">Sign Out</p>\n          </button>\n        </div>\n      </div>\n      <li className=\"small font-weight-bold text-dark\">Rooms already occupied by other members can't be occupied.</li>\n      <li className=\"small font-weight-bold text-dark\">You can only occupy one room at a time which are vacant.</li>\n      <li className=\"small font-weight-bold text-dark\">At the end of the meeting please click again to vacate.</li>\n    </div>\n  )\n}\n","import React from 'react'\nimport '../design/App.css';\n\nexport default function ListItem({key,name,item,enabled,onClick,occupied,user,status}) {\n  return (\n    <div onClick={onClick} className=\"d-flex justify-content-between align-items-center list\" key={key}>\n      <p className=\"text-info\">{name}</p>\n      <div className=\"d-flex  justify-content-between align-items-center \">\n        {item ?\n          <p className=\"tab text-warning px-3\">{item}</p> : <p className=\"tab text-info px-3\">Vacant</p>\n        }\n        <div style={{ borderColor:  status ? '#0c9' : 'grey',display: status ? 'block' : occupied.indexOf(user) === -1 && enabled  ? 'block' : 'none' }}\n          className=\"box\">\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","import React from 'react'\nimport loader from \"../assets/loader.gif\";\n\nexport default function Loader(style) {\n  return (\n    <div className=\"loading d-flex justify-content-center align-items-center h-75 flex-column\" style={style}>\n      <img src={loader} alt=\"loader\" />\n      <p className=\"text-info\">Updating status ...</p>\n    </div>\n  )\n}\n","/* eslint-disable react-native/no-inline-styles */\nimport React , {useState,useContext, useEffect} from \"react\";\nimport {Redirect} from 'react-router-dom';\nimport { message } from \"../assets/config\";\nimport firebase from \"firebase\";\nimport Header from \"./Header\"\nimport ListItem from \"./ListItem\"\nimport { AuthContext } from \"./auth\"\nimport Footer from \"./Footer\";\nimport Loader from \"./Loader\";\n\nconst Dashboard = () => {\nconst [data, setData] = useState([]);\nconst [occupiedUser, setOccupiedUser] = useState([]);\nconst { user,signIn } = useContext(AuthContext);\nconst [loading,setLoading]= useState(false)\n\nuseEffect(() => {\n  readUserData();\n}, []);\n\nconst sendData = (id) => {\n  let flag = data.some((items) => items.occupant === user.displayName);\n  let arr;\n  arr = data.map((items) => {\n    if (!flag && items.id === id && items.occupant === \"\") {\n      items.status = !items.status;\n      items.occupant = user.displayName;\n      items.enabled = true;\n      const occupy = {\n        RoomId: items.id,\n        User: user.displayName,\n      };\n      firebase.database().ref(\"Occupy\").push(occupy);\n    } else if (flag && items.id === id && items.occupant === user.displayName) {\n       items.status = !items.status;\n       items.occupant = \"\";\n       for (const property in occupiedUser){\n        if(occupiedUser[property].User === user.displayName){\n          firebase.database().ref().child(\"Occupy/\"+property).remove()\n        }\n      }\n    }\n    return items;\n  });\n  setData(arr);\n  sendUserData();\n};\n\nconst sendUserData = () => {\n  firebase\n  .database()\n  .ref(\"Rooms/\")\n  .set({\n    data,\n  });\n};\n\nconst readUserData = () => {\n  setLoading(true);\n  firebase\n    .database()\n    .ref(\"Rooms/\")\n    .on(\"value\", function (snapshot) {\n      setData(snapshot.val().data);\n      setLoading(false)\n    });\n  firebase\n    .database()\n    .ref(\"Occupy/\")\n    .on(\"value\", function (snapshot) {\n      setOccupiedUser(snapshot.val());\n      setLoading(false)\n    });\n};\n\nconst occupy = occupiedUser ? Array.from(Object.values(occupiedUser)) : [\"Dummy User\"]\nconst occupyUser = occupy.map((item) => {\n  return item.User\n})\n\nif(!signIn){\n  return <Redirect to={\"/\"} />\n}\n\nconst freeRoom = data.filter(item => item.occupant === '').length;\nconst stats= freeRoom === 0 ? 'No room' : freeRoom === 1 ? '1 room' : `${freeRoom} rooms`;\nconst colorCode = stats === 'No room' ? 'tomato' : '#0c9';\n\n  return (\n    <div className=\"bg\">\n      <div className=\"container position-relative vh-100\">\n        <Header style={{color: colorCode}} src={user && user.photoURL} onClick={() => firebase.auth().signOut()} stats={stats}/>\n        {loading ? <Loader style={{ display: loading ? 'flex' : 'none' }} /> :\n          data !== undefined ?\n            data.map(item =>\n              <ListItem key={item.id} name={item.name} item={item.occupant} status={item.status} occupied={occupyUser} user={user.displayName} enabled={item.enabled} onClick={() => sendData(item.id)} />\n            ) : <p>{message}</p>}\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/* eslint-disable react-native/no-inline-styles */\nimport React from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./design/App.css\";\nimport Landing from \"./components/Landing\";\nimport Dashboard from \"./components/Dashboard\";\nimport { AuthProvider} from \"./components/auth.js\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <AuthProvider >\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n        </Router>\n      </AuthProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './design/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconsole.disableYellowBox = true;\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}